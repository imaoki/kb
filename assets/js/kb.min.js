/*! © 2025 imaoki | MIT License | https://github.com/imaoki */
class KB{constructor(){this.initHandlers=[];this.init();}
addInitHandler(handler){if(typeof handler==='function'){this.initHandlers.push(handler);}}
each(elements,fn){if(!elements||typeof fn!=='function')return;for(const[index,element]of[...elements].entries()){fn(element,index);}}
async execCopy(textValue){if(!textValue)return false;try{await navigator.clipboard.writeText(textValue);return true;}
catch(error){console.warn('クリップボードへのコピーに失敗:',error);return false;}}
init(){const runInitHandlers=()=>{this.initHandlers.forEach(handler=>{try{handler();}
catch(error){console.error('初期化ハンドラーでエラーが発生しました:',error);}});};if(document.readyState==='loading'){document.addEventListener("DOMContentLoaded",runInitHandlers);}
else{Promise.resolve().then(runInitHandlers);}}}
window.kb=new KB();
